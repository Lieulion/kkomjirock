<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->

	<!-- dataSource : MySQL과 연결을 담당한다. -->
	<!-- MyBatis에서 다중 쿼리를 실행하기 위해서 추가한다. ==> &amp;allowMultiQueries=true" -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy">
			<!-- value="com.mysql.cj.jdbc.Driver" -->
		</property>	
		<property name="url" value="jdbc:log4jdbc:mysql://127.0.0.1:3306/kkomjirock?autoReconnect=true&amp;useSSL=false&amp;serverTimezone=UTC&amp;allowMultiQueries=true"></property>
		<property name="username" value="bandmaster"></property>
		<property name="password" value="1111"></property>
	</bean>

	<!-- SqlSessionFactory 객체 주입 -->
	<!-- MyBatis 설정 기능을 활용할 수 있도록 설정파일을 읽어오는 부분과
	     SQL 문을 작성해둘 Mapper.xml을 읽어오는 부분 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		
		<!-- mybatis-config.xml이 스프링이 시작될 때 같이 실행되로록 설정한다. -->
		<property name="configLocation" value="classpath:/mybatis-config.xml"></property>
		
		<!-- XML Mapper 파일을 인식하도록 설정한다. -->
		<property name="mapperLocations" value="classpath:mappers/**/*Mapper.xml"></property>
	</bean>
		
	<!-- SqlSession 객체 주입 -->
	<!-- 기본적인 트랙잰션 관리나 쓰레드 처리의 안정성 등을 보장, DB의 연결과 종료를 관리하는 부분 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
	</bean>
	
	<!-- Bean 등록 -->
	<context:component-scan base-package="com.kkomjirock.web.news.dao"></context:component-scan>
	<context:component-scan base-package="com.kkomjirock.web.news.service"></context:component-scan>
	<context:component-scan base-package="import com.kkomjirock.web.common.Pagination"></context:component-scan>
	
	
	
	
	<!-- AOP 설정 -->
	<context:annotation-config></context:annotation-config>
	
	<!-- component-scan을 이용하여 해당 패키지를 스캔하게 된다. -->
	<!-- 이 과정에서 AopServiceImpl와 LogAdvice가 스프링의 Bean객체로 등록된다. -->
	
	
	<!-- <aop:aspectj-autoproxy></aop:aspectj-autoproxy>를 이용해서
		 LogAdvice에 설정한 @Before가 동작하게 된다. -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
</beans>

